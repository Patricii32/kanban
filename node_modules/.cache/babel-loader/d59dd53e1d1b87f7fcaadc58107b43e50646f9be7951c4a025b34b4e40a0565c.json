{"ast":null,"code":"var _jsxFileName = \"/Users/dkravtsov/Skillfactory finish/Kanban/kanban/src/components/Main.jsx\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useMemo } from \"react\";\nimport TaskBlock from \"./TaskBlock\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Main({\n  backlog,\n  setBacklog,\n  ready,\n  setReady,\n  inProgress,\n  setInProgress,\n  finished,\n  setFinished\n}) {\n  _s();\n  const tasksLength = backlog.length + ready.length + inProgress.length + finished.length;\n  const addTask = useCallback((task, column) => {\n    if (column === \"Backlog\") {\n      setBacklog([...backlog, task]);\n    } else if (column === \"Ready\") {\n      setReady([...ready, task]);\n      setBacklog(backlog.filter(el => el.id !== task.id));\n    } else if (column === \"In Progress\") {\n      setInProgress([...inProgress, task]);\n      setReady(ready.filter(el => el.id !== task.id));\n    } else {\n      setFinished([...finished, task]);\n      setInProgress(inProgress.filter(el => el.id !== task.id));\n    }\n  }, [backlog, ready, inProgress, finished, setBacklog, setReady, setInProgress, setFinished]);\n  const columnData = useMemo(() => [{\n    name: \"Backlog\",\n    tasks: backlog,\n    select: null\n  }, {\n    name: \"Ready\",\n    tasks: ready,\n    select: backlog\n  }, {\n    name: \"In Progress\",\n    tasks: inProgress,\n    select: ready\n  }, {\n    name: \"Finished\",\n    tasks: finished,\n    select: inProgress\n  }], [backlog, ready, inProgress, finished]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: columnData.map(column => /*#__PURE__*/_jsxDEV(TaskBlock, {\n        name: column.name,\n        tasks: column.tasks,\n        select: column.select,\n        addTask: addTask,\n        tasksLength: tasksLength\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n_s(Main, \"os+JgVe4cLunhBFDuU6Gp5/YTIw=\");\n_c = Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","useCallback","useMemo","TaskBlock","jsxDEV","_jsxDEV","Main","backlog","setBacklog","ready","setReady","inProgress","setInProgress","finished","setFinished","_s","tasksLength","length","addTask","task","column","filter","el","id","columnData","name","tasks","select","className","children","map","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/dkravtsov/Skillfactory finish/Kanban/kanban/src/components/Main.jsx"],"sourcesContent":["import React, { useCallback, useMemo } from \"react\";\nimport TaskBlock from \"./TaskBlock\";\n\nexport default function Main({\n  backlog,\n  setBacklog,\n  ready,\n  setReady,\n  inProgress,\n  setInProgress,\n  finished,\n  setFinished,\n}) {\n  const tasksLength =\n    backlog.length + ready.length + inProgress.length + finished.length;\n\n  const addTask = useCallback(\n    (task, column) => {\n      if (column === \"Backlog\") {\n        setBacklog([...backlog, task]);\n      } else if (column === \"Ready\") {\n        setReady([...ready, task]);\n        setBacklog(backlog.filter((el) => el.id !== task.id));\n      } else if (column === \"In Progress\") {\n        setInProgress([...inProgress, task]);\n        setReady(ready.filter((el) => el.id !== task.id));\n      } else {\n        setFinished([...finished, task]);\n        setInProgress(inProgress.filter((el) => el.id !== task.id));\n      }\n    },\n    [\n      backlog,\n      ready,\n      inProgress,\n      finished,\n      setBacklog,\n      setReady,\n      setInProgress,\n      setFinished,\n    ]\n  );\n\n  const columnData = useMemo(\n    () => [\n      {\n        name: \"Backlog\",\n        tasks: backlog,\n        select: null,\n      },\n      {\n        name: \"Ready\",\n        tasks: ready,\n        select: backlog,\n      },\n      {\n        name: \"In Progress\",\n        tasks: inProgress,\n        select: ready,\n      },\n      {\n        name: \"Finished\",\n        tasks: finished,\n        select: inProgress,\n      },\n    ],\n    [backlog, ready, inProgress, finished]\n  );\n\n  return (\n    <div className=\"main\">\n      <div className=\"container\">\n        {columnData.map((column) => (\n          <TaskBlock\n            name={column.name}\n            tasks={column.tasks}\n            select={column.select}\n            addTask={addTask}\n            tasksLength={tasksLength}\n          />\n        ))}\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}